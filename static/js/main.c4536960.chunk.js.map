{"version":3,"sources":["types/FilterSelect.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","utils/httpClient.ts","components/TodoModal/TodoModal.tsx","services/getUser.ts","App.tsx","services/getTodos.ts","index.tsx"],"names":["FilterSelect","TodoList","todos","selectTodo","setSelectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filter","setFilter","filterSelect","setFilterSelect","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","getData","url","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","status","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","data","catch","_error","finally","href","email","name","App","setTodos","length","newTodos","trim","toLowerCase","includes","toLocaleLowerCase","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4536960.chunk.js","sourcesContent":["export enum FilterSelect {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectTodo: Todo | null;\n  setSelectTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  setSelectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': selectTodo?.id === todo.id,\n                    'fa-eye': selectTodo?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { FilterSelect } from '../../types/FilterSelect';\n\ninterface Props {\n  filter: string;\n  setFilter: (filter: string) => void;\n  filterSelect: FilterSelect;\n  setFilterSelect: (filter: FilterSelect) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  filterSelect,\n  setFilterSelect,\n}) => {\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilterSelect(event.target.value as FilterSelect);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterSelect}\n            onChange={handleSelect}\n          >\n            <option value={FilterSelect.All}>All</option>\n            <option value={FilterSelect.Active}>Active</option>\n            <option value={FilterSelect.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {filter && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear Search\"\n              onClick={() => setFilter('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function getWait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function getData<T>(url: string): Promise<T> {\n  return getWait(300)\n    .then(() => fetch(BASE_URL + url))\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../services/getUser';\n\ninterface Props {\n  todo: Todo;\n  setSelectTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(todo.userId)\n      .then((data) => {\n        setUser(data);\n      })\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .catch((_error) => {\n        setUser(null);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={setSelectTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by ' }\n\n              {!isLoading && user !== null && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n\n              {!isLoading && user === null && (\n                <p>User not found</p>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { User } from '../types/User';\nimport { getData } from '../utils/httpClient';\n\nexport function getUser(userId: number) {\n  return getData<User>(`/users/${userId}.json`);\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './services/getTodos';\nimport { Todo } from './types/Todo';\nimport { FilterSelect } from './types/FilterSelect';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<string>('');\n  const [filterSelect, setFilterSelect] = useState<FilterSelect>(FilterSelect.All);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n      })\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .catch((_error) => {\n        setTodos([]);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const getFilteredTodos = () => {\n    let newTodos = [...todos];\n\n    newTodos = newTodos.filter((todo) => {\n      switch (filterSelect) {\n        case FilterSelect.Active:\n          return !todo.completed;\n\n        case FilterSelect.Completed:\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n    return newTodos.filter(({ title }) => title.trim().toLowerCase()\n      .includes(filter.trim().toLocaleLowerCase()));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                filterSelect={filterSelect}\n                setFilterSelect={setFilterSelect}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && todos.length > 0 && (\n                <TodoList\n                  todos={getFilteredTodos()}\n                  selectTodo={selectTodo}\n                  setSelectTodo={(todo) => setSelectTodo(todo)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectTodo !== null && (\n        <TodoModal\n          todo={selectTodo}\n          setSelectTodo={() => setSelectTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { getData } from '../utils/httpClient';\n\nexport function getTodos() {\n  return getData<Todo[]>('/todos.json');\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}